/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class usb_macosx_DeviceImpl */

#ifndef _Included_usb_macosx_DeviceImpl
#define _Included_usb_macosx_DeviceImpl
#ifdef __cplusplus
extern "C" {
#endif
#undef usb_macosx_DeviceImpl_DEVICE_SELFPOWERED
#define usb_macosx_DeviceImpl_DEVICE_SELFPOWERED 0L
#undef usb_macosx_DeviceImpl_DEVICE_REMOTE_WAKEUP
#define usb_macosx_DeviceImpl_DEVICE_REMOTE_WAKEUP 1L
#undef usb_macosx_DeviceImpl_MAX_CONTROL_LENGTH
#define usb_macosx_DeviceImpl_MAX_CONTROL_LENGTH 4096L
/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    openNative
 * Signature: (Ljava/lang/String;)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_openNative
  (JNIEnv *, jclass, jstring);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    openExclusiveNative
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_openExclusiveNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    closeNative
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_closeNative
  (JNIEnv *, jclass, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    cyclePort
 * Signature: (I)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_cyclePort
  (JNIEnv *, jclass, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    controlMsg
 * Signature: (IBBSS[BIS)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_controlMsg
  (JNIEnv *, jclass, jint, jbyte, jbyte, jshort, jshort, jbyteArray, jint, jshort);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    setConfiguration
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_setConfiguration
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    readBulk
 * Signature: (II[BII)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_readBulk
  (JNIEnv *, jclass, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    writeBulk
 * Signature: (II[BII)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_writeBulk
  (JNIEnv *, jclass, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    readIntr
 * Signature: (II[BII)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_readIntr
  (JNIEnv *, jclass, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    writeIntr
 * Signature: (II[BII)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_writeIntr
  (JNIEnv *, jclass, jint, jint, jbyteArray, jint, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    clearHalt
 * Signature: (IB)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_clearHalt
  (JNIEnv *, jclass, jint, jbyte);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    claimInterface
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_claimInterface
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    releaseInterface
 * Signature: (II)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_releaseInterface
  (JNIEnv *, jclass, jint, jint);

/*
 * Class:     usb_macosx_DeviceImpl
 * Method:    setInterface
 * Signature: (III)J
 */
JNIEXPORT jlong JNICALL Java_usb_macosx_DeviceImpl_setInterface
  (JNIEnv *, jclass, jint, jint, jint);

#ifdef __cplusplus
}
#endif
#endif
